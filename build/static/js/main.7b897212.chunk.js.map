{"version":3,"sources":["constants.js","Playlist.js","IndividualVideos.js","Spinner.js","Download.js","Format.js","Result.js","App.js","index.js"],"names":["HOST","Playlist","props","axiosInstance","axios","create","baseURL","timeout","headers","Accept","quality","type","setIsLoading","setIsDownloadLinkAvailable","setIsResultVisible","setDownloadLinks","setPlaylistName","setPlaylistLength","useState","input","setInput","isInputDisabled","length","substr","className","onChange","e","target","value","placeholder","onClick","regexM","test","input1","replace","post","playlistURL","then","response","console","log","catch","err","alert","IndividualVideos","regex","fetch","method","mode","body","JSON","stringify","urls","res","json","data","playListName","Spinner","visible","text","classes","color","color1","height","width","style","class","Download","downloadLinks","playlistName","promiseSetTimeOut","time","Promise","resolve","setTimeout","mainDownload","url","a","document","createElement","setAttribute","dispatchEvent","MouseEvent","ctrlKey","download","link","videoURL","audioURL","downURL","Format","setQuality","setType","htmlFor","format","selectedIndex","name","id","label","selected","Result","playlistLength","App","isDownloadLinkAvailable","isLoading","isResultVisible","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.7b897212.chunk.js","sourcesContent":["// export const HOST = \"http://localhost:8081\";\r\n// export const HOST = \"http://192.168.29.234:8081\";\r\n\r\nexport const HOST = \"https://puppeteer-test-zoqc.onrender.com\";\r\nexport const TIMEOUT = 3600000;\r\n// export const HOST='https://plausible-wobbly-sock.glitch.me'\r\n// export const HOST=''\r\n","import { useState } from \"react\";\r\nimport \"./Playlist.css\";\r\nimport { HOST, TIMEOUT } from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nconst Playlist = (props) => {\r\n  const axiosInstance = axios.create({\r\n    baseURL: HOST,\r\n    timeout: TIMEOUT,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"content-type\": \"application/json\",\r\n      //'Authorization': 'token <your-token-here> -- https://docs.GitHub.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token'\r\n    },\r\n  });\r\n\r\n  const {\r\n    quality,\r\n    type,\r\n    setIsLoading,\r\n    setIsDownloadLinkAvailable,\r\n    setDownloadLinks,\r\n    setPlaylistName,\r\n    setPlaylistLength,\r\n    setIsResultVisible,\r\n  } = props;\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const generateLink = () => {\r\n    const regex = /http[s]?[:]\\/\\/www\\.youtube\\.com\\/playlist[?]list[=].+/;\r\n    const regexM = /http[s]?[:]\\/\\/m\\.youtube\\.com\\/playlist[?]list[=].+/;\r\n    if (!regex.test(input) && !regexM.test(input)) {\r\n      alert(\"Invalid playlist link\");\r\n      return;\r\n    }\r\n\r\n    let input1 = input;\r\n    if (regexM.test(input)) {\r\n      input1 = input.replace(\"m\", \"www\");\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setIsResultVisible(false);\r\n    setIsDownloadLinkAvailable(false);\r\n\r\n    axiosInstance\r\n      .post(\"/getList\", { playlistURL: input1, quality, type })\r\n      .then((response) => {\r\n        console.log(response);\r\n      })\r\n      .catch((err) => console.log);\r\n\r\n    // fetch(`${HOST}/getList`, {\r\n    //   method: \"post\",\r\n    //   mode: \"cors\",\r\n    //   headers: {\r\n    //     \"content-type\": \"application/json\",\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     playlistURL: input1,\r\n    //     quality,\r\n    //     type,\r\n    //   }),\r\n    // })\r\n    //   .then((res) => res.json())\r\n    //   .then((data) => {\r\n    //     setIsResultVisible(true);\r\n    //     console.log(data);\r\n    //     setIsLoading(false);\r\n    //     const { videoList, playListName, audioList } = data?.[0];\r\n    //     if (videoList) {\r\n    //       setDownloadLinks(videoList);\r\n    //       setPlaylistLength(videoList.length);\r\n    //       setPlaylistName(playListName);\r\n    //       setIsDownloadLinkAvailable(true);\r\n    //     } else if (audioList) {\r\n    //       setDownloadLinks(audioList);\r\n    //       setPlaylistLength(audioList.length);\r\n    //       setPlaylistName(playListName);\r\n    //       setIsDownloadLinkAvailable(true);\r\n    //     }\r\n    //   })\r\n    //   .catch((err) => {\r\n    //     setDownloadLinks([]);\r\n    //     setPlaylistName(\"\");\r\n    //     setPlaylistLength(0);\r\n    //     console.log(err);\r\n    //     setIsResultVisible(false);\r\n    //     setIsLoading(false);\r\n    //     alert(\"some error\");\r\n    //   });\r\n  };\r\n\r\n  const isInputDisabled = () => {\r\n    if (input.length >= 4 && input.substr(0, 4) === \"http\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Playlist\">\r\n      <div className=\"playlistInput\">\r\n        <input\r\n          onChange={(e) => {\r\n            setInput(e.target.value);\r\n          }}\r\n          className=\"inputLink\"\r\n          type=\"text\"\r\n          placeholder=\"Insert the url of youtube playlist\"\r\n        />\r\n        <button\r\n          className={`${isInputDisabled() ? \"disabled\" : \"\"}`}\r\n          onClick={isInputDisabled() ? () => {} : generateLink}\r\n        >\r\n          Generate Link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","import { useState } from \"react\";\r\nimport \"./IndividualVideos.css\";\r\nimport { HOST } from \"./constants\";\r\n\r\nconst IndividualVideos = (props) => {\r\n  const {\r\n    quality,\r\n    type,\r\n    setIsLoading,\r\n    setIsDownloadLinkAvailable,\r\n    setDownloadLinks,\r\n    setPlaylistName,\r\n    setIsResultVisible\r\n  } = props;\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const generateLink = () => {\r\n    const regex = /http[s]?[:]\\/\\/www\\.youtube\\.com\\/watch[?]v[=].+/;\r\n    const regexM = /http[s]?[:]\\/\\/m\\.youtube\\.com\\/watch[?]v[=].+/;\r\n    if (!regex.test(input)) {\r\n      alert(\"Invalid video link\");\r\n      return;\r\n    }\r\n\r\n    if (!regex.test(input) && !regexM.test(input)) {\r\n      alert(\"Invalid playlist link\");\r\n      return;\r\n    }\r\n\r\n    let input1 = input;\r\n    if (regexM.test(input)) {\r\n      input1 = input.replace(\"m\", \"www\");\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setIsResultVisible(false)\r\n    setIsDownloadLinkAvailable(false);\r\n    fetch(`${HOST}/getIndividualList`, {\r\n      method: \"post\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        urls: input1,\r\n        quality,\r\n        type,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setIsLoading(false);\r\n        if (data.length > 0) {\r\n          setDownloadLinks(data);\r\n          setPlaylistName(data[0].playListName);\r\n          setIsDownloadLinkAvailable(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setDownloadLinks([]);\r\n        setPlaylistName(\"\");\r\n        setIsLoading(false);\r\n        alert(\"some error\");\r\n      });\r\n  };\r\n\r\n  const isInputDisabled = () => {\r\n    if (input.length >= 4 && input.substr(0, 4) === \"http\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"IndividualVideos\">\r\n      <div className=\"videosInput\">\r\n        <input\r\n          onChange={(e) => {\r\n            setInput(e.target.value);\r\n          }}\r\n          className=\"inputLink\"\r\n          type=\"text\"\r\n          placeholder=\"Insert video links separated by commas\"\r\n        />\r\n        <button\r\n          className={`${isInputDisabled() ? \"disabled\" : \"\"}`}\r\n          onClick={isInputDisabled() ? () => {} : generateLink}\r\n        >\r\n          Generate Link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualVideos;\r\n","import \"./Spinner.css\";\r\n\r\n// use 'npm i react-loader-spinner@4.0.0\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n// expected props:\r\n// visible: boolean ,\r\n// classes: string,\r\n// color: string,\r\n// text: string\r\nfunction Spinner(props) {\r\n  const { visible, text, type } = props;\r\n  let classes = props.classes || \"\";\r\n  const color = props.color || \"#fff\";\r\n  let color1 = props.color;\r\n  //   console.log(\"is spinner visible: \", visible);\r\n  return (\r\n    <div className={`Spinner ${classes} ${visible ? \"\" : \"none\"}`}>\r\n      <Loader\r\n        type={type}\r\n        color={color}\r\n        height={50}\r\n        width={50}\r\n        timeout={0} //30 secs\r\n      />\r\n      <span style={color1 ? { color: color } : {}} class=\"Loading_Text\">\r\n        {text}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import \"./Download.css\";\r\n\r\nconst Download = (props) => {\r\n  const { downloadLinks, playlistName, type } = props;\r\n\r\n  const promiseSetTimeOut = (time) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, time);\r\n    });\r\n  };\r\n\r\n  const mainDownload = async (url) => {\r\n    const a = document.createElement(\"a\");\r\n    a.setAttribute(\"href\", url);\r\n    a.setAttribute(\"target\", \"_blank\");\r\n    a.setAttribute(\"rel\", \"noopener noreferrer\");\r\n    // document.body.append(a);\r\n\r\n    // a.click();\r\n    a.dispatchEvent(new MouseEvent(\"click\", { ctrlKey: true }));\r\n    // document.body.remove(\"a\");\r\n    // window.open(url, \"_blank\").blur();\r\n    if (type === \"audio\") {\r\n      await promiseSetTimeOut(3000);\r\n    } else {\r\n      await promiseSetTimeOut(10000);\r\n    }\r\n  };\r\n\r\n  const download = async () => {\r\n    if (playlistName === \"videos\") {\r\n      for (let link of downloadLinks) {\r\n        await mainDownload(link.videoURL);\r\n      }\r\n    } else if (playlistName === \"audios\") {\r\n      for (let link of downloadLinks) {\r\n        await mainDownload(link.audioURL);\r\n      }\r\n    } else {\r\n      for (let link of downloadLinks) {\r\n        await mainDownload(link.downURL);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Download\">\r\n      <button onClick={download}>Download</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Download;\r\n","import \"./Format.css\";\r\n\r\nconst Format = (props) => {\r\n  const { setQuality, setType } = props;\r\n\r\n  const handleChange = (e) => {\r\n    const format = e.target.value;\r\n    const index = e.target.selectedIndex;\r\n    if (index < 6) {\r\n      setType(\"video\");\r\n      setQuality(format);\r\n    } else {\r\n      setType(\"audio\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Format\">\r\n      <label htmlFor=\"\">Format: </label>\r\n      <select onChange={handleChange} name=\"Format\" id=\"\">\r\n        <optgroup label=\"Video\">\r\n          <option value=\"144\">144p</option>\r\n          <option value=\"240\">240p</option>\r\n          <option value=\"360\">360p</option>\r\n          <option selected value=\"480\">\r\n            480p\r\n          </option>\r\n          <option value=\"720\">720p</option>\r\n          <option value=\"1080\">1080p</option>\r\n        </optgroup>\r\n        <optgroup label=\"Audio\">\r\n          <option value=\"mp3\">128kbps</option>\r\n        </optgroup>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Format;\r\n","import \"./Result.css\";\r\n\r\nconst Result = (props) => {\r\n  return (\r\n    <div className=\"Result\">\r\n      <h3>{props.playlistName}</h3>\r\n      <p>\r\n        {props.playlistLength ? props.playlistLength : 0} videos found in\r\n        playlist\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport Playlist from \"./Playlist\";\r\nimport IndividualVideos from \"./IndividualVideos\";\r\nimport Spinner from \"./Spinner\";\r\nimport Download from \"./Download\";\r\nimport Format from \"./Format\";\r\nimport Result from \"./Result\";\r\n\r\nfunction App() {\r\n  const [isDownloadLinkAvailable, setIsDownloadLinkAvailable] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [quality, setQuality] = useState(\"480\");\r\n  const [type, setType] = useState(\"video\"); // ['audio','video']\r\n\r\n  const [downloadLinks, setDownloadLinks] = useState([]);\r\n  const [playlistName, setPlaylistName] = useState(\"\"); // ['audios','videos','<actualName>']\r\n  const [playlistLength, setPlaylistLength] = useState(0);\r\n  const [isResultVisible,setIsResultVisible]=useState(false)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Format setQuality={setQuality} setType={setType} />\r\n      <Playlist\r\n        quality={quality}\r\n        type={type}\r\n        setIsLoading={setIsLoading}\r\n        setIsDownloadLinkAvailable={setIsDownloadLinkAvailable}\r\n        setDownloadLinks={setDownloadLinks}\r\n        setPlaylistName={setPlaylistName}\r\n        setPlaylistLength={setPlaylistLength}\r\n        setIsResultVisible={setIsResultVisible}\r\n      />\r\n      <div className=\"OR\">OR</div>\r\n      <div className=\"labelIndividualVideos\">\r\n        For downloading videos separately\r\n      </div>\r\n      <IndividualVideos\r\n        quality={quality}\r\n        type={type}\r\n        setIsLoading={setIsLoading}\r\n        setIsDownloadLinkAvailable={setIsDownloadLinkAvailable}\r\n        setDownloadLinks={setDownloadLinks}\r\n        setPlaylistName={setPlaylistName}\r\n        setIsResultVisible={setIsResultVisible}\r\n      />\r\n      <Spinner\r\n        classes=\"center mgtop\"\r\n        visible={isLoading}\r\n        text={\"Loading\"}\r\n        type=\"Circles\"\r\n        color=\"black\"\r\n      />\r\n      {isDownloadLinkAvailable ? (\r\n        <Download\r\n          type={type}\r\n          downloadLinks={downloadLinks}\r\n          playlistName={playlistName}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {playlistLength != 0 && isResultVisible ? (\r\n        <Result playlistName={playlistName} playlistLength={playlistLength} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  /* </React.StrictMode> */\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}