{"version":3,"sources":["helper.js","Playlist.js","constants.js","IndividualVideos.js","Spinner.js","Download.js","Format.js","FormatY2.js","Header.js","Result.js","App.js","index.js"],"names":["promiseSetTimeOut","time","Promise","resolve","setTimeout","Playlist","props","axios","create","baseURL","timeout","headers","Accept","quality","type","setIsLoading","setIsDownloadLinkAvailable","setDownloadLinks","setPlaylistName","setPlaylistLength","setIsResultVisible","useState","input","setInput","isInputDisabled","length","substr","className","onChange","e","target","value","placeholder","onClick","regexM","test","input1","replace","fetch","method","mode","body","JSON","stringify","playlistURL","then","res","json","data","a","console","log","mainData","state","videoList","playListName","audioList","catch","err","alert","IndividualVideos","urls","Spinner","visible","text","classes","color","color1","height","width","style","class","Download","downloadLinks","playlistName","mainDownload","url","title","extension","Number","cors","blob","durl","URL","createObjectURL","link","document","createElement","download","href","click","setAttribute","videoURL","audioURL","downURL","Format","setQuality","setType","setSide","htmlFor","format","selectedIndex","name","id","label","selected","FormatY2","Header","side","Result","playlistLength","App","isDownloadLinkAvailable","isLoading","isResultVisible","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.764127b2.chunk.js","sourcesContent":["const promiseSetTimeOut = (time) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve();\r\n    }, time);\r\n  });\r\n};\r\n\r\nexport { promiseSetTimeOut };\r\n","import { useState } from \"react\";\r\nimport \"./Playlist.css\";\r\nimport { HOST, TIMEOUT, TIME_INTERVAL } from \"./constants\";\r\nimport axios from \"axios\";\r\n\r\nimport { promiseSetTimeOut } from \"./helper\";\r\n\r\nconst Playlist = (props) => {\r\n  const axiosInstance = axios.create({\r\n    baseURL: HOST,\r\n    timeout: TIMEOUT,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"content-type\": \"application/json\",\r\n      //'Authorization': 'token <your-token-here> -- https://docs.GitHub.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token'\r\n    },\r\n  });\r\n\r\n  const {\r\n    quality,\r\n    type,\r\n    setIsLoading,\r\n    setIsDownloadLinkAvailable,\r\n    setDownloadLinks,\r\n    setPlaylistName,\r\n    setPlaylistLength,\r\n    setIsResultVisible,\r\n  } = props;\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const generateLink = () => {\r\n    const regex = /http[s]?[:]\\/\\/www\\.youtube\\.com\\/playlist[?]list[=].+/;\r\n    const regexM = /http[s]?[:]\\/\\/m\\.youtube\\.com\\/playlist[?]list[=].+/;\r\n    if (!regex.test(input) && !regexM.test(input)) {\r\n      alert(\"Invalid playlist link\");\r\n      return;\r\n    }\r\n\r\n    let input1 = input;\r\n    if (regexM.test(input)) {\r\n      input1 = input.replace(\"m\", \"www\");\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setIsResultVisible(false);\r\n    setIsDownloadLinkAvailable(false);\r\n\r\n    // axiosInstance\r\n    //   .post(\"/getList\", { playlistURL: input1, quality, type })\r\n    //   .then((response) => {\r\n    //     console.log(response);\r\n    //   })\r\n    //   .catch((err) => console.log);\r\n\r\n    fetch(`${HOST}/getList`, {\r\n      method: \"post\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        playlistURL: input1,\r\n        quality,\r\n        type,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then(async (data) => {\r\n        console.log(data);\r\n        while (true) {\r\n          await promiseSetTimeOut(TIME_INTERVAL);\r\n          const res = await fetch(`${HOST}/getResponseState`);\r\n          const mainData = await res.json();\r\n          // .then((res) => res.json())\r\n          // .then((mainData) => {\r\n          console.log(\"mainData \", mainData);\r\n          if (mainData.state === false) {\r\n            await promiseSetTimeOut(10000);\r\n            continue;\r\n          }\r\n          setIsResultVisible(true);\r\n          console.log(mainData);\r\n          setIsLoading(false);\r\n          const { videoList, playListName, audioList } = mainData.data?.[0];\r\n          if (videoList) {\r\n            setDownloadLinks(videoList);\r\n            setPlaylistLength(videoList.length);\r\n            setPlaylistName(playListName);\r\n            setIsDownloadLinkAvailable(true);\r\n          } else if (audioList) {\r\n            setDownloadLinks(audioList);\r\n            setPlaylistLength(audioList.length);\r\n            setPlaylistName(playListName);\r\n            setIsDownloadLinkAvailable(true);\r\n          }\r\n          break;\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setDownloadLinks([]);\r\n        setPlaylistName(\"\");\r\n        setPlaylistLength(0);\r\n        console.log(err);\r\n        setIsResultVisible(false);\r\n        setIsLoading(false);\r\n        alert(\"some error\");\r\n      });\r\n  };\r\n\r\n  const isInputDisabled = () => {\r\n    if (input.length >= 4 && input.substr(0, 4) === \"http\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Playlist\">\r\n      <div className=\"playlistInput\">\r\n        <input\r\n          onChange={(e) => {\r\n            setInput(e.target.value);\r\n          }}\r\n          className=\"inputLink\"\r\n          type=\"text\"\r\n          placeholder=\"Insert the url of youtube playlist\"\r\n        />\r\n        <button\r\n          className={`${isInputDisabled() ? \"disabled\" : \"\"}`}\r\n          onClick={isInputDisabled() ? () => {} : generateLink}\r\n        >\r\n          Generate Link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Playlist;\r\n","// export const HOST = \"http://localhost:8081\";\r\n// export const HOST = \"http://192.168.29.234:8081\";\r\n\r\n// export const HOST = \"https://puppeteer-test-zoqc.onrender.com\";\r\nexport const TIMEOUT = 3600000;\r\nexport const TIME_INTERVAL = 60000;\r\n// export const HOST='https://plausible-wobbly-sock.glitch.me'\r\nexport const HOST = \"\";\r\n\r\n// export const sendMediaHOST='https://sendmedia-1-s2394736.deta.app'\r\n// export const sendMediaHOST='http://localhost:8082'\r\n// export const sendMediaHOST=''\r\nexport const sendMediaHOST= HOST\r\n \r\n// \"homepage\": \"https://harsh116.github.io/ytDownloader\", \r\n\r\n\r\n\r\n\r\n","import { useState } from \"react\";\r\nimport \"./IndividualVideos.css\";\r\nimport { HOST } from \"./constants\";\r\n\r\nconst IndividualVideos = (props) => {\r\n  const {\r\n    quality,\r\n    type,\r\n    setIsLoading,\r\n    setIsDownloadLinkAvailable,\r\n    setDownloadLinks,\r\n    setPlaylistName,\r\n    setIsResultVisible\r\n  } = props;\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const generateLink = () => {\r\n    const regex = /http[s]?[:]\\/\\/www\\.youtube\\.com\\/watch[?]v[=].+/;\r\n    const regexM = /http[s]?[:]\\/\\/m\\.youtube\\.com\\/watch[?]v[=].+/;\r\n    if (!regex.test(input) && !regexM.test(input)) {\r\n      alert(\"Invalid video link\");\r\n      return;\r\n    }\r\n\r\n    // if (!regex.test(input) && !regexM.test(input)) {\r\n    //   alert(\"Invalid playlist link\");\r\n    //   return;\r\n    // }\r\n\r\n    let input1 = input;\r\n    if (regexM.test(input)) {\r\n      input1 = input.replace(\"m\", \"www\");\r\n    }\r\n\r\n    setIsLoading(true);\r\n    setIsResultVisible(false)\r\n    setIsDownloadLinkAvailable(false);\r\n    fetch(`${HOST}/getIndividualList`, {\r\n      method: \"post\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        urls: input1,\r\n        quality,\r\n        type,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setIsLoading(false);\r\n        if (data.length > 0) {\r\n          setDownloadLinks(data);\r\n          setPlaylistName(data[0].playListName);\r\n          setIsDownloadLinkAvailable(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setDownloadLinks([]);\r\n        setPlaylistName(\"\");\r\n        setIsLoading(false);\r\n        alert(\"some error\");\r\n      });\r\n  };\r\n\r\n  const isInputDisabled = () => {\r\n    if (input.length >= 4 && input.substr(0, 4) === \"http\") {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"IndividualVideos\">\r\n      <div className=\"videosInput\">\r\n        <input\r\n          onChange={(e) => {\r\n            setInput(e.target.value);\r\n          }}\r\n          className=\"inputLink\"\r\n          type=\"text\"\r\n          placeholder=\"Insert video links separated by commas\"\r\n        />\r\n        <button\r\n          className={`${isInputDisabled() ? \"disabled\" : \"\"}`}\r\n          onClick={isInputDisabled() ? () => {} : generateLink}\r\n        >\r\n          Generate Link\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IndividualVideos;\r\n","import \"./Spinner.css\";\r\n\r\n// use 'npm i react-loader-spinner@4.0.0\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n// expected props:\r\n// visible: boolean ,\r\n// classes: string,\r\n// color: string,\r\n// text: string\r\nfunction Spinner(props) {\r\n  const { visible, text, type } = props;\r\n  let classes = props.classes || \"\";\r\n  const color = props.color || \"#fff\";\r\n  let color1 = props.color;\r\n  //   console.log(\"is spinner visible: \", visible);\r\n  return (\r\n    <div className={`Spinner ${classes} ${visible ? \"\" : \"none\"}`}>\r\n      <Loader\r\n        type={type}\r\n        color={color}\r\n        height={50}\r\n        width={50}\r\n        timeout={0} //30 secs\r\n      />\r\n      <span style={color1 ? { color: color } : {}} class=\"Loading_Text\">\r\n        {text}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import \"./Download.css\";\r\nimport {HOST,sendMediaHOST} from './constants'\r\n\r\nconst Download = (props) => {\r\n  const { downloadLinks, playlistName, type } = props;\r\n\r\n  const promiseSetTimeOut = (time) => {\r\n    return new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        \r\n        resolve();\r\n      }, time);\r\n    });\r\n  };\r\n\r\n  const mainDownload = async (url,title,extension,quality) => {\r\n\r\n    console.log('qualityN: ',Number(quality))\r\n    console.log('qualityS: ',(quality))\r\n\r\n   \r\n      if(extension=='mp4' && quality==='360'|| extension==='mp3'&&quality==='128'){\r\n         try{\r\n      const res=  await fetch(`${sendMediaHOST}/sendMedia`, {\r\n    method: \"post\",\r\n    cors: \"cors\",\r\n    headers: {\r\n      \"content-type\": \"application/json\",\r\n      // accept: \"Application/octet-stream\",\r\n    },\r\n    body: JSON.stringify({ url }),\r\n  })\r\n    // .then((res) => res.blob())\r\n    const blob=await res.blob()\r\n    // .then((blob) => {\r\n      // const blob = new Blob(data);\r\n\r\n      console.log(\"blob: \", blob);\r\n      const durl = URL.createObjectURL(blob);\r\n      const link = document.createElement(\"a\");\r\n      link.download = `${title}.${extension}`\r\n      link.href = durl;\r\n      console.log(link);\r\n      link.click();\r\n    }\r\n    catch(err){\r\n      console.log('err: ',err)\r\n    }\r\n\r\n    \r\n    // })\r\n    \r\n\r\n\r\n    return\r\n    }\r\n\r\n\r\n    const a = document.createElement(\"a\");\r\n    a.setAttribute(\"href\", url);\r\n    a.setAttribute(\"target\", \"_blank\");\r\n    a.setAttribute(\"rel\", \"noopener noreferrer\");\r\n    a.setAttribute('download', 'any.mp4')\r\n    // document.body.append(a);\r\n\r\n    a.click()\r\n    ;\r\n    // a.dispatchEvent(new MouseEvent(\"click\", { ctrlKey: true }));\r\n    // const newTab = window.open(url, \"_blank\");\r\n    // document.body.remove(\"a\");\r\n    // window.open(url, \"_blank\").blur();\r\n    if (type === \"audio\") {\r\n      await promiseSetTimeOut(3000);\r\n    } else {\r\n      await promiseSetTimeOut(10000);\r\n    }\r\n\r\n  \r\n \r\n  };\r\n\r\n  const download = async () => {\r\n    if (playlistName === \"videos\") {\r\n      for (let link of downloadLinks) {\r\n        await mainDownload(link.videoURL,link.title,\"mp4\",link.quality);\r\n      }\r\n    } else if (playlistName === \"audios\") {\r\n      for (let link of downloadLinks) {\r\n        await mainDownload(link.audioURL,link.title,\"mp3\",link.quality);\r\n      }\r\n    } else {\r\n      for (let link of downloadLinks) {\r\n        await mainDownload(link.downURL,link.title,link.type,link.quality);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Download\">\r\n      <button onClick={download}>Download</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Download;\r\n","import \"./Format.css\";\r\n\r\nconst Format = (props) => {\r\n  const { setQuality, setType,setSide } = props;\r\n\r\n  const handleChange = (e) => {\r\n    setSide('left')\r\n    const format = e.target.value;\r\n    const index = e.target.selectedIndex;\r\n    if (index < 3) {\r\n      setType(\"video\");\r\n      setQuality(format);\r\n    } else {\r\n      setType(\"audio\");\r\n      setQuality(\"128\")\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"Format\">\r\n      <label htmlFor=\"\">Format: </label>\r\n      <select onChange={handleChange} name=\"Format\" id=\"\">\r\n        <optgroup label=\"Video\">\r\n          {/*<option value=\"144\">144p</option>*/}\r\n          {/*<option value=\"240\">240p</option>*/}\r\n          <option selected value=\"360\">360p</option>\r\n          {/*<option  value=\"480\">*/}\r\n            {/*480p*/}\r\n          {/*</option>*/}\r\n          <option value=\"720\">720p(recommended)</option>\r\n            <option value=\"720c\">720p(for copyright)</option>\r\n          {/*<option value=\"1080\">1080p</option>*/}\r\n        </optgroup>\r\n        <optgroup label=\"Audio\">\r\n          <option value=\"mp3\">128kbps</option>\r\n        </optgroup>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Format;\r\n","// import \"./Format.css\";\r\nimport './FormatY2.css'\r\n\r\nconst FormatY2 = (props) => {\r\n  const { setQuality, setType,setSide } = props;\r\n\r\n  const handleChange = (e) => {\r\n    setSide('right')\r\n    const format = e.target.value;\r\n    const index = e.target.selectedIndex;\r\n    if (index < 6) {\r\n      setType(\"video\");\r\n      setQuality(format);\r\n    } else {\r\n      setType(\"audio\");\r\n      setQuality('128y')\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"FormatY2\">\r\n\r\n      <label htmlFor=\"\">Format: </label>\r\n      <select onChange={handleChange} name=\"Format\" id=\"\">\r\n        <optgroup label=\"Video(y2mate)\">\r\n          <option value=\"144y\">144p</option>\r\n          <option value=\"240y\">240p</option>\r\n          <option selected value=\"360y\">360p</option>\r\n          <option  value=\"480y\">\r\n            480p\r\n          </option>\r\n          <option value=\"720y\">720p</option>\r\n            \r\n          <option value=\"1080y\">1080p</option>\r\n        </optgroup>\r\n        <optgroup label=\"Audio(y2mate)\">\r\n          <option value=\"mp3\">128kbps</option>\r\n        </optgroup>\r\n      </select>\r\n      <div style={{'font-size': '0.5rem', 'text-align': \r\n    'center'}}>From other sources</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormatY2;\r\n","import './Header.css'\r\nimport Format from './Format'\r\nimport FormatY2 from './FormatY2'\r\n\r\nconst Header=(props)=>{\r\n\tconst {side,setQuality,setType,setSide}=props;\r\n\r\n \r\n      \r\n\treturn(\r\n\t\t<div className=\"Header\">\r\n\t\t\t<div className={`left ${side==='left'?'active':''}`}>\r\n\t\t\t<Format setQuality={setQuality} setType={setType} setSide={setSide}/>\r\n\t\t\t</div>\r\n\t\t\t<div className={`right ${side==='right'?'active':''}`}>\r\n\t\t\t<FormatY2 setQuality={setQuality} setType={setType} setSide={setSide}/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\t\r\nexport default Header","import \"./Result.css\";\r\n\r\nconst Result = (props) => {\r\n  return (\r\n    <div className=\"Result\">\r\n      <h3>{props.playlistName}</h3>\r\n      <p>\r\n        {props.playlistLength ? props.playlistLength : 0} videos found in\r\n        playlist\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import { useState, useEffect, useRef } from \"react\";\r\nimport \"./App.css\";\r\nimport Playlist from \"./Playlist\";\r\nimport IndividualVideos from \"./IndividualVideos\";\r\nimport Spinner from \"./Spinner\";\r\nimport Download from \"./Download\";\r\nimport Format from \"./Format\";\r\nimport FormatY2 from \"./FormatY2\";\r\nimport Header from './Header'\r\n\r\nimport Result from \"./Result\";\r\n\r\nfunction App() {\r\n  const [isDownloadLinkAvailable, setIsDownloadLinkAvailable] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [quality, setQuality] = useState(\"360\"); // ['360','720','128','128y','144y','240y','360y','480y','720y','1080y']\r\n  const [type, setType] = useState(\"video\"); // ['audio','video']\r\n  const [side,setSide]=useState('left'); //['left','right']\r\n\r\n  const [downloadLinks, setDownloadLinks] = useState([]);\r\n  const [playlistName, setPlaylistName] = useState(\"\"); // ['audios','videos','<actualName>']\r\n  const [playlistLength, setPlaylistLength] = useState(0);\r\n  const [isResultVisible,setIsResultVisible]=useState(false)\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header side={side} setQuality={setQuality} setType={setType} setSide={setSide}/>\r\n     {/* <Format setQuality={setQuality} setType={setType} setSide={setSide}/>\r\n      <FormatY2 setQuality={setQuality} setType={setType} setSide={setSide}/>*/}\r\n      <Playlist\r\n        quality={quality}\r\n        type={type}\r\n        setIsLoading={setIsLoading}\r\n        setIsDownloadLinkAvailable={setIsDownloadLinkAvailable}\r\n        setDownloadLinks={setDownloadLinks}\r\n        setPlaylistName={setPlaylistName}\r\n        setPlaylistLength={setPlaylistLength}\r\n        setIsResultVisible={setIsResultVisible}\r\n      />\r\n      <div className=\"OR\">OR</div>\r\n      <div className=\"labelIndividualVideos\">\r\n        For downloading videos separately\r\n      </div>\r\n      <IndividualVideos\r\n        quality={quality}\r\n        type={type}\r\n        setIsLoading={setIsLoading}\r\n        setIsDownloadLinkAvailable={setIsDownloadLinkAvailable}\r\n        setDownloadLinks={setDownloadLinks}\r\n        setPlaylistName={setPlaylistName}\r\n        setIsResultVisible={setIsResultVisible}\r\n      />\r\n      <Spinner\r\n        classes=\"center mgtop\"\r\n        visible={isLoading}\r\n        text={\"Loading\"}\r\n        type=\"Circles\"\r\n        color=\"black\"\r\n      />\r\n      {isDownloadLinkAvailable ? (\r\n        <Download\r\n          type={type}\r\n          downloadLinks={downloadLinks}\r\n          playlistName={playlistName}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {playlistLength != 0 && isResultVisible ? (\r\n        <Result playlistName={playlistName} playlistLength={playlistLength} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  /* </React.StrictMode> */\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}